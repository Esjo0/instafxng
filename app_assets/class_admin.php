<?php

class AdminUser {

    public function authenticate($username = "", $password = "") {
        global $db_handle;
        $username = $db_handle->sanitizePost($username);

        $query = "SELECT pass_salt FROM admin WHERE email = '{$username}' LIMIT 1";
        
        $result = $db_handle->runQuery($query);
        
        if($db_handle->numOfRows($result) == 1) {
            $user = $db_handle->fetchAssoc($result);
            $pass_salt = $user[0]['pass_salt'];
            $hashed_password = hash("SHA512", "$pass_salt.$password");
            
            $query = "SELECT admin_code, email, first_name, last_name, last_login, "
                    . "status FROM admin WHERE email = '{$username}' AND password "
                    . "= '{$hashed_password}' LIMIT 1";
            $result = $db_handle->runQuery($query);
            
            if($db_handle->numOfRows($result) == 1) {
                $found_user = $db_handle->fetchAssoc($result);
                return $found_user;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }
    
    public function get_admin_detail($username = "", $password = "") {
        return $this->authenticate($username, $password);
    }
    
    public function update_admin_password($username = "", $password = "") {
        global $db_handle;
        
        $query = "SELECT pass_salt FROM admin WHERE email = '{$username}' LIMIT 1";
        $result = $db_handle->runQuery($query);
        $user = $db_handle->fetchAssoc($result);
        $pass_salt = $user[0]['pass_salt'];
        $hashed_password = hash("SHA512", "$pass_salt.$password");
        
        $query = "UPDATE admin SET password = '{$hashed_password}' WHERE email = '{$username}' LIMIT 1";
        $result = $db_handle->runQuery($query);
        
        if($db_handle->affectedRows() > 0) {
            return true;
        } else {
            return false;
        }
    }

    public function get_all_admin_member() {
        global $db_handle;

        $query = "SELECT CONCAT(last_name, ' ', first_name) AS full_name, admin_code FROM admin";
        $result = $db_handle->runQuery($query);
        $fetched_data = $db_handle->fetchAssoc($result);
        return $fetched_data;
    }
    
    public function get_admin_name_by_code($admin_code) {
        global $db_handle;
        
        $query = "SELECT CONCAT(last_name, ' ', first_name) AS full_name FROM admin WHERE admin_code = '$admin_code'";
        $result = $db_handle->runQuery($query);
        $fetched_data = $db_handle->fetchAssoc($result);
        
        $full_name = $fetched_data[0]['full_name'];
        return $full_name;
    }
    
    public function get_admin_detail_by_code($admin_code) {
        global $db_handle;
        
        $query = "SELECT last_name, first_name, email, status FROM admin WHERE admin_code = '$admin_code' LIMIT 1";
        $result = $db_handle->runQuery($query);
        
        if($db_handle->numOfRows($result) > 0) {
            $fetched_data = $db_handle->fetchAssoc($result);
            return $fetched_data[0];
        } else {
            return false;
        }
        
    }
    
    public function get_privileges($admin_code) {
        global $db_handle;
        
        $query = "SELECT allowed_pages FROM admin_privilege WHERE admin_code = '$admin_code' LIMIT 1";
        $result = $db_handle->runQuery($query);
        
        if($db_handle->numOfRows($result) > 0) {
            $fetched_data = $db_handle->fetchAssoc($result);
            return $fetched_data[0];
        } else {
            return false;
        }
    }
    
    // Confirm that the email address is not existing
    public function admin_is_duplicate($email) {
        global $db_handle;
        
        $query = "SELECT * FROM admin WHERE email = '$email'";
        $result = $db_handle->numRows($query);
        
        if($result) {
            return true;
        } else {
            return false;
        }
    }
    
    // Check whether admin has an active status
    public function admin_is_active($email) {
        global $db_handle;
        
        $query = "SELECT status FROM admin WHERE email = '$email'";
        $result = $db_handle->runQuery($query);
        $fetched_data = $db_handle->fetchAssoc($result);
        
        if($fetched_data[0]['status'] == '1') {
            return true;
        } else {
            return false;
        }
    }
    
    // Add a new admin profile
    public function add_new_admin($first_name, $last_name, $email) {
        global $db_handle;
        global $system_object;
        
        //check whether admin_code generated by rand_string is already existing
        admin_code:
        $admin_code = rand_string(5);
        if($db_handle->numRows("SELECT admin_code FROM admin WHERE admin_code = '$admin_code'") > 0) { goto admin_code; };
    
        $pass = rand_string(7);
        $pass_salt = hash("SHA256", "$admin_code");
        $hashed_password = hash("SHA512", "$pass_salt.$pass");
        
        $query = "INSERT INTO admin (admin_code, email, pass_salt, password, first_name, last_name) VALUES ('$admin_code', '$email', '$pass_salt', '$hashed_password', '$first_name', '$last_name')";
        $db_handle->runQuery($query);
        
        if($db_handle->affectedRows() > 0) {
            
            $query = "INSERT INTO admin_privilege (admin_code, allowed_pages) VALUES ('$admin_code', '')";
            $db_handle->runQuery($query);
            
            //New admin succefully inserted, send default password to the admin
            $subject = "Instafxng Admin Login";
            $body =
<<<MAIL
<div style="background-color: #F3F1F2">
    <div style="max-width: 80%; margin: 0 auto; padding: 10px; font-size: 14px; font-family: Verdana;">
        <img src="https://instafxng.com/images/ifxlogo.png" />
        <hr />
        <div style="background-color: #FFFFFF; padding: 15px; margin: 5px 0 5px 0;">
            <p>Dear $first_name,</p>

            <p>A new Instafxng Admin profile has been created for you.</p>

            <p>Your system generated password is $pass</p>
            <p>Your username is $email</p>

            <p>Login with the URL below, you can update your password in the
            profile settings.</p>

            <p>https://instafxng.com/admin</p>

            <p>Do not share your Admin credentials with anyone.</p>

            <br /><br />
            <p>Best Regards,</p>
            <p>Instafxng Support,<br />
                www.instafxng.com</p>
            <br /><br />
        </div>
        <hr />
        <div style="background-color: #EBDEE9;">
            <div style="font-size: 11px !important; padding: 15px;">
                <p style="text-align: center"><span style="font-size: 12px"><strong>We"re Social</strong></span><br /><br />
                    <a href="https://facebook.com/InstaForexNigeria"><img src="https://instafxng.com/images/Facebook.png"></a>
                    <a href="https://twitter.com/instafxng"><img src="https://instafxng.com/images/Twitter.png"></a>
                    <a href="https://www.instagram.com/instafxng/"><img src="https://instafxng.com/images/instagram.png"></a>
                    <a href="https://www.youtube.com/channel/UC0Z9AISy_aMMa3OJjgX6SXw"><img src="https://instafxng.com/images/Youtube.png"></a>
                    <a href="https://linkedin.com/company/instaforex-ng"><img src="https://instafxng.com/images/LinkedIn.png"></a>
                </p>
                <p><strong>Head Office Address:</strong> TBS Place, Block 1A, Plot 8, Diamond Estate, Estate Bus-Stop, LASU/Isheri road, Isheri Olofin, Lagos.</p>
                <p><strong>Lekki Office Address:</strong> Road 5, Suite K137, Ikota Shopping Complex, Lekki/Ajah Express Road, Lagos State</p>
                <p><strong>Office Number:</strong> 08028281192</p>
                <br />
            </div>
            <div style="font-size: 10px !important; padding: 15px; text-align: center;">
                <p>This email was sent to you by Instant Web-Net Technologies Limited, the
                    official Nigerian Representative of Instaforex, operator and administrator
                    of the website www.instafxng.com</p>
                <p>To ensure you continue to receive special offers and updates from us,
                    please add support@instafxng.com to your address book.</p>
            </div>
        </div>
    </div>
</div>
MAIL;
            
            $system_object->send_email($subject, $body, $email, $first_name);
            
            return true;
        } else {
            return false;
        }
    }


    // Add New Dinner Attendee
    public function add_new_dinner_attendee($full_name, $email, $phone_number) {
        global $db_handle;

        $query = "INSERT INTO dinner_2016 (full_name, email, phone) VALUES ('$full_name', '$email', '$phone_number')";
        $db_handle->runQuery($query);

        return $db_handle->affectedRows() > 0 ? true : false;

    }
    
    // Update admin profile - modify the status
    public function modify_admin_profile($admin_code, $admin_status) {
        global $db_handle;
        
        $query = "UPDATE admin SET status = '{$admin_status}' WHERE admin_code = '{$admin_code}' LIMIT 1";
        $db_handle->runQuery($query);
        
        if($db_handle->affectedRows() > 0) {
            return true;
        } else {
            return false;
        }
    }
    
    public function modify_admin_privilege($admin_code, $allowed_pages) {
        global $db_handle;
        
        $query = "UPDATE admin_privilege SET allowed_pages = '{$allowed_pages}' WHERE admin_code = '{$admin_code}' LIMIT 1";
        $result = $db_handle->runQuery($query);
        
        if($db_handle->affectedRows() > 0) {
            return true;
        } else {
            return false;
        }
    }
    
    // Add a new bulletin
    public function add_new_bulletin($bulletin_no, $title, $content, $bulletin_status = '2', $all_allowed_admin, $admin_code) {
        global $db_handle;
        
        if(!empty($bulletin_no)) {
            $query = "UPDATE admin_bulletin SET title = '{$title}', content = '$content', status = '$bulletin_status', allowed_admin = '$all_allowed_admin' WHERE admin_bulletin_id = $bulletin_no LIMIT 1";
        } else {
            $query = "INSERT INTO admin_bulletin (admin_code, title, content, status, allowed_admin) VALUES ('$admin_code', '$title', '$content', '$bulletin_status', '$all_allowed_admin')";
        }
        
        $result = $db_handle->runQuery($query);
        
        if($db_handle->affectedRows() > 0) {
            return true;
        } else {
            return false;
        }
    }
    
    // Add a new article
    public function add_new_article($article_no, $title, $description, $tags, $display_picture, $url, $content, $article_status = '2', $admin_code) {
        global $db_handle;
        
        if(!empty($article_no)) {
            $query = "UPDATE article SET title = '{$title}', description = '$description', keyword = '$tags', display_image = '$display_picture', content = '$content', url = '$url', status = '$article_status', created = NOW() WHERE article_id = $article_no LIMIT 1";
        } else {
            $query = "INSERT INTO article (admin_code, title, description, keyword, display_image, content, url, status) VALUES ('$admin_code', '$title', '$description', '$tags', '$display_picture', '$content', '$url', '$article_status')";
        }
        
        $result = $db_handle->runQuery($query);
        
        if($db_handle->affectedRows() > 0) {
            return true;
        } else {
            return false;
        }
    }
    
    // Publish bulletin
    public function get_publish_bulletin($bulletin_id) {
        global $db_handle;
        
        $query = "UPDATE admin_bulletin SET status = '1' WHERE admin_bulletin_id = $bulletin_id LIMIT 1";
        $result = $db_handle->runQuery($query);
        
        return true;
    }
    
    // Add a new article
    public function update_system_message($system_message_id, $system_message_type, $subject, $content) {
        global $db_handle;
        
        // if it is an email, i.e. type == 1 and the subject is empty, do nothing
        // because an email message requires a subject to be set
        if($system_message_type == '1' && empty($subject)) {
            return false;
        }
        
        if($system_message_type == '1') {
            $query = "UPDATE system_message SET subject = '{$subject}', value = '$content' WHERE system_message_id = $system_message_id LIMIT 1";
        } else {
            $query = "UPDATE system_message SET value = '$content' WHERE system_message_id = $system_message_id LIMIT 1";
        }
        
        $result = $db_handle->runQuery($query);
        
        if($db_handle->affectedRows() > 0) {
            return true;
        } else {
            return false;
        }
    }

    // Create new job posting
    public function create_new_job($job_no, $job_title, $job_content, $job_status, $admin_code) {
        global $db_handle;

        if(!empty($job_no)) {
            $query = "UPDATE career_jobs SET title = '$job_title', detail = '$job_content', status = '$job_status'
                WHERE career_jobs_id = $job_no LIMIT 1";
        } else {
            //check whether admin_code generated by rand_string is already existing
            new_job_code:
            $job_code = rand_string_caps(6);
            if($db_handle->numRows("SELECT job_code FROM career_jobs WHERE job_code = '$job_code'") > 0) { goto new_job_code; };

            $query = "INSERT INTO career_jobs (admin_code, job_code, title, detail, status)
                VALUES ('$admin_code', '$job_code', '$job_title', '$job_content', '$job_status')";
        }

        $db_handle->runQuery($query);
        return $db_handle->affectedRows() > 0 ? true : false;
    }

    // Get course by id
    public function get_job_posting_by_id($job_id) {
        global $db_handle;

        $query = "SELECT * FROM career_jobs WHERE career_jobs_id = $job_id LIMIT 1";
        $result = $db_handle->runQuery($query);
        $fetched_data = $db_handle->fetchAssoc($result);
        $fetched_data = $fetched_data[0];

        return $fetched_data ? $fetched_data : false;
    }
    
}

$admin_object = new AdminUser();